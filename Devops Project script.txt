node{
   stage('SCM Checkout'){
     git 'https://github.com/damodaranj/my-app.git'
	 }
	 stage('Compile-Package'){

      def mvnHome =  tool name: 'maven3', type: 'maven'   
      sh "${mvnHome}/bin/mvn clean package"
	  sh 'mv target/myweb*.war target/newapp.war'
   }
   stage('SonarQube Analysis'){
	        def mvnHome =  tool name: 'maven3', type: 'maven'
	        withSonarQubeEnv('sonar'){ 
	          sh "${mvnHome}/bin/mvn sonar:sonar"
	        }
   }
   stage('Build Docker Image'){
   sh 'docker build -t harikrishnan586/myweb:0.0.2 .'
   }
   stage('Docker Image Push'){
   withCredentials([string(credentialsId: 'dockerPass', variable: 'dockerPassword')]) {
   sh "docker login -u harikrishnan586 -p ${dockerPassword}"
    }
   sh 'docker push harikrishnan586/myweb:0.0.2'
   }
   stage('Nexus Image Push'){
       sh "docker login -u admin -p admin123 13.229.53.58:8083"
       sh "docker tag harikrishnan586/myweb:0.0.2 13.229.53.58:8083/harish:1.0.0"
       sh "docker push 13.229.53.58:8083/harish:1.0.0"
   }
   stage('Remove Previous Container'){
try{
sh 'docker rm -f tomcattest'
}catch(error){
// do nothing if there is an
exception
}
}
   stage('Docker deployment'){
   sh 'docker run -d -p 8090:8080 --name tomcattest harikrishnan586/myweb:0.0.2'
   }
}   



/usr/lib/jvm/java-11-openjdk-amd64/bin/java
62379fdb8e5144a701589f42fe440e8016a141d8 *token name

